---
title: "PSYR6003_Assignment4"
author: "Mikaela Ethier-Gagnon"
format: docx
editor: visual
---

## PSYR6003 Assignment 4: Linear Mixed Effects Modelling

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
#Loading all necessary libraries 
library(tidyverse)
library(readxl)
library(haven)
library(dplyr)
library(lme4)
library(flexplot)
library(patchwork)
library(apaTables)
#Loading in the dataset
data <- read_spss("P6003.A4.sav")
#data already appears to be in long format, so no necessary changes here.
```

We will be building a model where extraversion and neuroticism are predictors, and the dependent variable is satisfaction with life. We hope to test the following hypotheses: H1: Extraversion will be positively associated with satisfaction with life. H2: Neuroticism will be negatively associated with satisfaction with life. H3: The effects will be similar for both level 1 (within participants over time) and level 2 (between participants).

```{r}
#Descriptive statistics, and visualizing the data
tabledata <- select(data, tipm.E, tipm.N, swl)
#Then using the apaTables package to save a correlation table as a word document  
table1 <- apa.cor.table(tabledata, 
                        table.number=1, filename = "Table1.doc")
#Visualize univariate distributions
a=flexplot(tipm.E~1, data = data)
b=flexplot(tipm.N~1, data = data)
c=flexplot(swl~1, data = data)
a+b+c
#extraversion is normally distributed, neuroticism is negatively skewed, life satisfaction appears positively skewed 
#does not look like there are any outliers

##Now we need to determine if LME is the best route for our analysis based on the ICC
#Run a baseline linear mixed model for outcome with random intercept only using lme4 package without any predictors
baseline <- lmer (swl ~ 1+(1|id), data = data)
icc(baseline)
#ICC is a measure that tells us what proportion of all variability in the model is due to the cluster effects.
#The higher the value, the less independent our data are.
#74% of the variance is due to clusters! (i.e., repeated measures), so running a mixed model is the best approach here
#we would be artificially increasing our sample size by 12.30 fold if we ran a normal model
```

Now that we have visualized the data, and we know that LME is the best approach, we will now conduct nested model comparisons.

```{r}
#First we have to compare nested models to build the model and determine random vs. fixed slopes 
#ML: allows you to compare nested models (e.g., build the model using ML)
#Create reduced model for extraversion, which would only include it as fixed.
##participant ID will be our cluster variable
fixed_extraversion <- lmer (swl ~  tipm.E + (1|id), data = data)

#Random + fixed extraversion effect. This model is saying there is an average effect of extraversion on SWL, but that changes across participants.
random_extraversion <- lmer (swl ~  tipm.E + (tipm.E|id), data = data)
##so extraversion also varies between participants 

#Do a model comparison
model.comparison(fixed_extraversion, random_extraversion)
#Extraversion as random and fixed fits the data better than being fixed alone  

#Take the best fitting model and adding neuroticism as a fixed effect. 
fixed_neuro <- lmer (swl ~ tipm.E + tipm.N + (tipm.E|id), data = data)
model.comparison(random_extraversion, fixed_neuro) 

#Add the final random neuroticism
random_neuro <- lmer (swl ~ tipm.E + tipm.N +  (tipm.E + tipm.N|id), data = data)

model.comparison(fixed_neuro, random_neuro) #better fit, extraversion and neuroticism are both random and fixed variables. So, our final model is random_neuro as this best fits our data. 

```

Testing assumptions and getting results:

```{r}
#Visualize the model 
visualize(random_neuro, plot = "model")

#Get diagnostics
visualize(random_neuro, plot = "residuals" )

#Get summary
summary(random_neuro)

#Get key estimates.
estimates(random_neuro)
##fixed effects are equivalent to estimates coefficients (for every one unit in predictor)
#dont interpret random effects, but amount accounting for randomness

#R square intercept is negative, we did not predict any variability of swl around the overall mean of swl for all participants.
#we did however predict 26% of the variability of swl from day to day around the average for each participant. 
library(performance)

r2(random_neuro) 
#conditional R square: accounts for the variance explained by both the fixed effects and the random effects 
##the entire mdoel predicted 79% of the variance
#Marginal R square: variance explained by fixed effects alone 
##This gives you an idea of how much of the variability in your dependent variable can be accounted for by the predictors that are consistent across the groups or clusters in your data
###9.4%

##generating a table with CI for model outputs 
install.packages("sjPlot")
library(sjPlot)
tab_model(random_neuro)

```
